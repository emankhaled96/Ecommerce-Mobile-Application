// Generated by view binder compiler. Do not edit!
package com.emankhaled.ecommerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emankhaled.ecommerceapp.R;
import com.google.android.material.appbar.AppBarLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBarSettings;

  @NonNull
  public final TextView closeSettingBtn;

  @NonNull
  public final TextView profileImageChangeBtn;

  @NonNull
  public final Button securityQuestionsBtn;

  @NonNull
  public final EditText settingsAddress;

  @NonNull
  public final EditText settingsFullName;

  @NonNull
  public final EditText settingsPass;

  @NonNull
  public final EditText settingsPhoneNumber;

  @NonNull
  public final CircleImageView settingsProfileImage;

  @NonNull
  public final Toolbar toolbarSettings;

  @NonNull
  public final TextView updateAccountSettingsBtn;

  private ActivitySettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appBarSettings, @NonNull TextView closeSettingBtn,
      @NonNull TextView profileImageChangeBtn, @NonNull Button securityQuestionsBtn,
      @NonNull EditText settingsAddress, @NonNull EditText settingsFullName,
      @NonNull EditText settingsPass, @NonNull EditText settingsPhoneNumber,
      @NonNull CircleImageView settingsProfileImage, @NonNull Toolbar toolbarSettings,
      @NonNull TextView updateAccountSettingsBtn) {
    this.rootView = rootView;
    this.appBarSettings = appBarSettings;
    this.closeSettingBtn = closeSettingBtn;
    this.profileImageChangeBtn = profileImageChangeBtn;
    this.securityQuestionsBtn = securityQuestionsBtn;
    this.settingsAddress = settingsAddress;
    this.settingsFullName = settingsFullName;
    this.settingsPass = settingsPass;
    this.settingsPhoneNumber = settingsPhoneNumber;
    this.settingsProfileImage = settingsProfileImage;
    this.toolbarSettings = toolbarSettings;
    this.updateAccountSettingsBtn = updateAccountSettingsBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_settings;
      AppBarLayout appBarSettings = ViewBindings.findChildViewById(rootView, id);
      if (appBarSettings == null) {
        break missingId;
      }

      id = R.id.close_setting_btn;
      TextView closeSettingBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeSettingBtn == null) {
        break missingId;
      }

      id = R.id.profile_image_change_btn;
      TextView profileImageChangeBtn = ViewBindings.findChildViewById(rootView, id);
      if (profileImageChangeBtn == null) {
        break missingId;
      }

      id = R.id.security_questions_btn;
      Button securityQuestionsBtn = ViewBindings.findChildViewById(rootView, id);
      if (securityQuestionsBtn == null) {
        break missingId;
      }

      id = R.id.settings_address;
      EditText settingsAddress = ViewBindings.findChildViewById(rootView, id);
      if (settingsAddress == null) {
        break missingId;
      }

      id = R.id.settings_full_name;
      EditText settingsFullName = ViewBindings.findChildViewById(rootView, id);
      if (settingsFullName == null) {
        break missingId;
      }

      id = R.id.settings_pass;
      EditText settingsPass = ViewBindings.findChildViewById(rootView, id);
      if (settingsPass == null) {
        break missingId;
      }

      id = R.id.settings_phone_number;
      EditText settingsPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (settingsPhoneNumber == null) {
        break missingId;
      }

      id = R.id.settings_profile_image;
      CircleImageView settingsProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (settingsProfileImage == null) {
        break missingId;
      }

      id = R.id.toolbar_settings;
      Toolbar toolbarSettings = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSettings == null) {
        break missingId;
      }

      id = R.id.update_account_settings_btn;
      TextView updateAccountSettingsBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateAccountSettingsBtn == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((RelativeLayout) rootView, appBarSettings, closeSettingBtn,
          profileImageChangeBtn, securityQuestionsBtn, settingsAddress, settingsFullName,
          settingsPass, settingsPhoneNumber, settingsProfileImage, toolbarSettings,
          updateAccountSettingsBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
