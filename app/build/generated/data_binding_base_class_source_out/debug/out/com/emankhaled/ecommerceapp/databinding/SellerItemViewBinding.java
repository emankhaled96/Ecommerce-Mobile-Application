// Generated by view binder compiler. Do not edit!
package com.emankhaled.ecommerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.emankhaled.ecommerceapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SellerItemViewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView sellerProductDescription;

  @NonNull
  public final ImageView sellerProductImage;

  @NonNull
  public final TextView sellerProductName;

  @NonNull
  public final TextView sellerProductPrice;

  @NonNull
  public final TextView sellerProductState;

  private SellerItemViewBinding(@NonNull CardView rootView,
      @NonNull TextView sellerProductDescription, @NonNull ImageView sellerProductImage,
      @NonNull TextView sellerProductName, @NonNull TextView sellerProductPrice,
      @NonNull TextView sellerProductState) {
    this.rootView = rootView;
    this.sellerProductDescription = sellerProductDescription;
    this.sellerProductImage = sellerProductImage;
    this.sellerProductName = sellerProductName;
    this.sellerProductPrice = sellerProductPrice;
    this.sellerProductState = sellerProductState;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SellerItemViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SellerItemViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.seller_item_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SellerItemViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.seller_product_description;
      TextView sellerProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (sellerProductDescription == null) {
        break missingId;
      }

      id = R.id.seller_product_image;
      ImageView sellerProductImage = ViewBindings.findChildViewById(rootView, id);
      if (sellerProductImage == null) {
        break missingId;
      }

      id = R.id.seller_product_name;
      TextView sellerProductName = ViewBindings.findChildViewById(rootView, id);
      if (sellerProductName == null) {
        break missingId;
      }

      id = R.id.seller_product_price;
      TextView sellerProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (sellerProductPrice == null) {
        break missingId;
      }

      id = R.id.seller_product_state;
      TextView sellerProductState = ViewBindings.findChildViewById(rootView, id);
      if (sellerProductState == null) {
        break missingId;
      }

      return new SellerItemViewBinding((CardView) rootView, sellerProductDescription,
          sellerProductImage, sellerProductName, sellerProductPrice, sellerProductState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
